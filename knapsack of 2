// you are given n items each weighs x[i] and you have a bag which can carry only two elements and has a  capacity of X weight find the minimum number of bags required to carry all the items
#include <bits/stdc++.h>
using namespace std;
#define fastio                        ios_base::sync_with_stdio(false); cin.tie(NULL); 
#define int                           long long
#define fauto(a,x)                    for (auto& a : x)
#define pb                            push_back 
#define sz                            size()
#define rep(i,k,n)                    for (int i = k; i < n; i++)
#define per(i,n,k)                   for (int i = n; i >= k; i--)
#define YES                           cout << "YES\n";
#define NO                            cout << "NO\n";
#define Yes                           cout << "Yes\n";
#define No                            cout << "No\n";


void solve()
{
	
	int n;
	cin>>n;
	int x;
	cin>>x;
	int arr[n];
	rep(i,0,n)
	{
		cin>>arr[i];
	}
	sort(arr,arr+n);
	int i=0;
	int j=n-1;
	int ans=0; 
	while(i<=j)
	{
		if(arr[i]+arr[j]<=x)
		{
			ans++; i++;
			j--;
		}
		else 
		{
			j--;
			ans++;
		}
	}
	cout<<ans<<endl;
	
}


signed main()
{
	int t=1;
	cin>>t;
	while(t--)
		solve();
}


	
		
		
	
	
	
	
